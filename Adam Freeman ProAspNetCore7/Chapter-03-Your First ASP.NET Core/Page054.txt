The Bootstrap classes in this example create a header, just to give structure 
to the layout. To style the form, I have used the form-group class, which is used 
to style the element that contains the label and the associated input or select 
element, which is assigned to the form-control class. You can see the effect of 
the styles in Figure 3-11.

Figure 3-11. Styling the RsvpForm view
(https://sergeyshef.ru/images/freeman-asp-net-core-7/Figure-3-11.webp)


Styling the Thanks View

The next view file to style is Thanks.cshtml, and you can see how I have done 
this in Listing 3-24, using CSS classes that are similar to the ones I used 
for the other views. To make an application easier to manage, it is a good 
principle to avoid duplicating code and markup wherever possible. ASP.NET Core 
provides several features to help reduce duplication, which I describe in later 
chapters. These features include Razor layouts (Chapter 22), partial views (Chapter 22), 
and view components (Chapter 24).