3.2.8   Displaying the Responses

At the end of the Thanks.cshtml view, I added an a element to create a link to display 
the list of people who are coming to the party. I used the asp-action tag helper 
attribute to create a URL that targets an action method called ListResponses, like this:

...
<div>Click <a asp-action="ListResponses">here</a> to see who is coming.</div>
...

If you hover the mouse over the link that is displayed by the browser, you will see 
that it targets the /Home/ListResponses URL. This doesn’t correspond to any of the 
action methods in the Home controller, and if you click the link, you will see a 
404 Not Found error response.

To add an endpoint that will handle the URL, I need to add another action method 
to the Home controller, as shown in Listing 3-15.

Listing 3-15. Adding an Action Method in the HomeController.cs File in the Controllers Folder

using Microsoft.AspNetCore.Mvc;
using PartyInvites.Models;

namespace PartyInvites.Controllers {
	public class HomeController : Controller {

		public IActionResult Index() {
			return View();
		}

		[HttpGet]
		public ViewResult RsvpForm() {
			return View();
		}

		[HttpPost]
		public ViewResult RsvpForm(GuestResponse guestResponse) {
			Repository.AddResponse(guestResponse);
			return View("Thanks", guestResponse);
		}

		public ViewResult ListResponses() {
			return View(Repository.Responses.Where(r => r.WillAttend == true));
		}
	}
}

The new action method is called ListResponses, and it calls the View method, 
using the Repository.Responses property as the argument. This will cause Razor 
to render the default view, using the action method name as the name of the view file, 
and to use the data from the repository as the view model. The view model data is 
filtered using LINQ so that only positive responses are provided to the view.