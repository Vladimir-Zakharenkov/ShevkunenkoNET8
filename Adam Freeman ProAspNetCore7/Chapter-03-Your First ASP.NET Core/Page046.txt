Figure 3-6. Showing a list of party attendees
(https://sergeyshef.ru/images/freeman-asp-net-core-7/Figure-3-6.webp)

3.2.9	Adding Validation

I can now add data validation to the application. Without validation, users 
could enter nonsense data or even submit an empty form. In an ASP.NET Core 
application, validation rules are defined by applying attributes to model classes, 
which means the same validation rules can be applied in any form that uses that
class. ASP.NET Core relies on attributes from the System.ComponentModel.DataAnnotations 
namespace, which I have applied to the GuestResponse class in Listing 3-17.

Listing 3-17. Applying Validation in the GuestResponse.cs File in the Models Folder

using System.ComponentModel.DataAnnotations;

namespace PartyInvites.Models {

	public class GuestResponse {

		[Required(ErrorMessage = "Please enter your name")]
		public string? Name { get; set; }

		[Required(ErrorMessage = "Please enter your email address")]
		[EmailAddress]
		public string? Email { get; set; }

		[Required(ErrorMessage = "Please enter your phone number")]
		public string? Phone { get; set; }

		[Required(ErrorMessage = "Please specify whether you'll attend")]
		public bool? WillAttend { get; set; }
	}
}

ASP.NET Core detects the attributes and uses them to validate data during 
the model-binding process.