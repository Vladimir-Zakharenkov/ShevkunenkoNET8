If you are using Visual Studio, saving the contents of the Repository.cs file will 
trigger a warning produced by the dotnet watch command telling you that a hot reload 
cannot be applied, which is the same warning described earlier in the chapter for 
Visual Studio Code users. You will see this prompt at the command line:

watch : Do you want to restart your app - Yes (y) / No (n) / Always (a) / Never (v)?

Press a to always rebuild the project.

Storing Responses

Now that I have somewhere to store the data, I can update the action method that receives 
the HTTP POST requests, as shown in Listing 3-13.

Listing 3-13. Updating an Action Method in the HomeController.cs File in the Controllers Folder

using Microsoft.AspNetCore.Mvc;
using PartyInvites.Models;

namespace PartyInvites.Controllers {
	public class HomeController : Controller {

		public IActionResult Index() {
			return View();
		}

		[HttpGet]
		public ViewResult RsvpForm() {
			return View();
		}

		[HttpPost]
		public ViewResult RsvpForm(GuestResponse guestResponse) {
			Repository.AddResponse(guestResponse);
			return View("Thanks", guestResponse);
		}
	}


Before the POST version of the RsvpForm method is invoked, the ASP.NET Core 
model binding feature extracts values from the HTML form and assigns them to 
the properties of the GuestResponse object. The result is used as the argument 
when the method is invoked to handle the HTTP request, and all I have to do
to deal with the form data sent in a request is to work with the GuestResponse 
object that is passed to the action method — in this case, to pass it as an argument 
to the Repository.AddResponse method so that the response can be stored.

Adding the Thanks View

The call to the View method in the RsvpForm action method creates a ViewResult 
that selects a view called Thanks and uses the GuestResponse object created 
by the model binder as the view model. Add a Razor View named Thanks.cshtml 
to the Views/Home folder with the content shown in Listing 3-14 to present 
a response to the user.