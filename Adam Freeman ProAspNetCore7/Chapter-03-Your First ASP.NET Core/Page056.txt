Styling the Thanks View

The next view file to style is Thanks.cshtml, and you can see how I have done 
this in Listing 3-24, using CSS classes that are similar to the ones I used 
for the other views. To make an application easier to manage, it is a good 
principle to avoid duplicating code and markup wherever possible. ASP.NET Core 
provides several features to help reduce duplication, which I describe in later 
chapters. These features include Razor layouts (Chapter 22), partial views (Chapter 22), 
and view components (Chapter 24).

Listing 3-24. Applying Bootstrap to the Thanks.cshtml File in the Views/Home Folder

@model PartyInvites.Models.GuestResponse

@{
	Layout = null;
}

<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>Thanks</title>
	<link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.css" />
</head>
<body class="text-center">
	<div>
		<h1>Thank you, @Model?.Name!</h1>

		@if (Model?.WillAttend == true) {
			@:It's great that you're coming. The drinks are already in the fridge!
		} else {
			@:Sorry to hear that you can't make it, but thanks for letting us know.
		}
	</div>
	Click <a asp-action="ListResponses">here</a> to see who is coming.
</body>
</html>

Figure 3-12 shows the effect of the styles.

Figure 3-12. Styling the Thanks view
(https://sergeyshef.ru/img/freeman-asp-net-core-6/Figure-3-12.png)
