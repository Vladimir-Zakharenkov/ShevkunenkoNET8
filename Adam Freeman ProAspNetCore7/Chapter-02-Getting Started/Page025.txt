2.3.2 Understanding routes

The ASP.NET Core routing system is responsible for selecting the endpoint that will
handle an HTTP request. A route is a rule that is used to decide how a request is handled.
When the project was created, a default rule was created to get started. You can
request any of the following URLs, and they will be dispatched to the Index action
defined by the Home controller:

•	/
•	/Home
•	/Home/Index

So, when a browser requests http://yoursite/ or http://yoursite/Home, it gets back
the output from HomeController’s Index method. You can try this yourself by changing
the URL in the browser. At the moment, it will be http://localhost:5000/. If you
append /Home or /Home/Index to the URL and press Return, you will see the same
Hello World result from the application.

2.3.3 Understanding HTML rendering

The output from the previous example wasn’t HTML—it was just the string Hello
World. To produce an HTML response to a browser request, I need a view, which
tells ASP.NET Core how to process the result produced by the Index method into an
HTML response that can be sent to the browser.

Creating and rendering a view

The first thing I need to do is modify my Index action method, as shown in listing 2.7.
The changes are shown in bold, which is a convention I follow throughout this book to
make the examples easier to follow.

Listing 2.7 Rendering a view in the HomeController.cs file in the Controllers folder

using Microsoft.AspNetCore.Mvc;

namespace FirstProject.Controllers {
	public class HomeController : Controller {
		public ViewResult Index() {
			return View("MyView");
		}
	}
}