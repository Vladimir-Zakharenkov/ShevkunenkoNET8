Listing 7.28 The Contents of the PageLinkTagHelper.cs File in the SportsStore/Infrastructure Folder

using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Rendering;
using Microsoft.AspNetCore.Mvc.Routing;
using Microsoft.AspNetCore.Mvc.ViewFeatures;
using Microsoft.AspNetCore.Razor.TagHelpers;
using SportsStore.Models.ViewModels;

namespace SportsStore.Infrastructure
{
    [HtmlTargetElement("div", Attributes = "page-model")]
    public class PageLinkTagHelper : TagHelper
    {
        private IUrlHelperFactory urlHelperFactory;

        public PageLinkTagHelper(IUrlHelperFactory helperFactory)
        {
            urlHelperFactory = helperFactory;
        }

        [ViewContext]
        [HtmlAttributeNotBound]
        public ViewContext? ViewContext { get; set; }

        public PagingInfo? PageModel { get; set; }

        public string? PageAction { get; set; }

        public override void Process(TagHelperContext context, TagHelperOutput output)
        {
            if (ViewContext != null && PageModel != null)
            {
                IUrlHelper urlHelper = urlHelperFactory.GetUrlHelper(ViewContext);

                TagBuilder result = new TagBuilder("div");

                for (int i = 1; i <= PageModel.TotalPages; i++)
                {
                    TagBuilder tag = new TagBuilder("a");
                    tag.Attributes["href"] = urlHelper.Action(PageAction, new { productPage = i });
                    tag.InnerHtml.Append(i.ToString());
                    result.InnerHtml.AppendHtml(tag);
                }

                output.Content.AppendHtml(result.InnerHtml);
            }
        }
    }
}

This tag helper populates a div element with a elements that correspond to pages of products. 
I am not going to go into detail about tag helpers now; it is enough to know that they are 
one of the most useful ways that you can introduce C# logic into your views. The code for 
a tag helper can look tortured because C# and HTML don’t mix easily. But using tag helpers 
is preferable to including blocks of C# code in a view because a tag helper can be easily 
unit tested.

Most ASP.NET Core components, such as controllers and views, are discovered automatically, but tag
helpers have to be registered. In Listing 7.29, I have added a statement to the _ViewImports.cshtml 
file in the Views folder that tells ASP.NET Core to look for tag helper classes in the SportsStore 
project. I also added an @using expression so that I can refer to the view model classes 
in views without having to qualify their names with the namespace.