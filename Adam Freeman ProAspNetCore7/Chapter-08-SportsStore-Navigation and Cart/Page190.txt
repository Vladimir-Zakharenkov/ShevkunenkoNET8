Creating the View

Razor uses different conventions for locating views that are selected by view components. 
Both the default name of the view and the locations that are searched for the view are different 
from those used for controllers. To that end, I created the Views/Shared/Components/NavigationMenu 
folder in the SportsStore project and added to it a Razor View named Default.cshtml, to which 
I added the content shown in Listing 8-9.

Listing 8-9. The Contents of the Default.cshtml File 
	in the SportsStore/Views/Shared/Components/NavigationMenu Folder

@model IEnumerable<string>

<div class="d-grid gap-2">

    <a class="btn btn-outline-secondary" asp-action="Index"
       asp-controller="Home" asp-route-category="">
        Home
    </a>

    @foreach (string category in Model ?? Enumerable.Empty<string>())
    {
        <a class="btn btn-outline-secondary"
           asp-action="Index" asp-controller="Home"
           asp-route-category="@category"
           asp-route-productPage="1">
            @category
        </a>
    }

</div>

This view uses one of the built-in tag helpers, which I describe in Chapters 25–27, to create anchor
elements whose href attribute contains a URL that selects a different product category.

Restart ASP.NET Core and request http://localhost:5000 to see the category navigation buttons. If
you click a button, the list of items is updated to show only items from the selected category, 
as shown in Figure 8-4.

https://sergeyshef.ru/img/freeman-asp-net-core-6/Figure-8-4.png

Figure 8-4. Generating category links with a view component
